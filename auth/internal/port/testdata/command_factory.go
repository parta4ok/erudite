// Code generated by MockGen. DO NOT EDIT.
// Source: command_factory.go

// Package testdata is a generated GoMock package.
package testdata

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/parta4ok/kvs/auth/internal/entities"
)

// MockCommandFactory is a mock of CommandFactory interface.
type MockCommandFactory struct {
	ctrl     *gomock.Controller
	recorder *MockCommandFactoryMockRecorder
}

// MockCommandFactoryMockRecorder is the mock recorder for MockCommandFactory.
type MockCommandFactoryMockRecorder struct {
	mock *MockCommandFactory
}

// NewMockCommandFactory creates a new mock instance.
func NewMockCommandFactory(ctrl *gomock.Controller) *MockCommandFactory {
	mock := &MockCommandFactory{ctrl: ctrl}
	mock.recorder = &MockCommandFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommandFactory) EXPECT() *MockCommandFactoryMockRecorder {
	return m.recorder
}

// NewIntrospectedCommand mocks base method.
func (m *MockCommandFactory) NewIntrospectedCommand(ctx context.Context, jwt string) (entities.Command, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewIntrospectedCommand", ctx, jwt)
	ret0, _ := ret[0].(entities.Command)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewIntrospectedCommand indicates an expected call of NewIntrospectedCommand.
func (mr *MockCommandFactoryMockRecorder) NewIntrospectedCommand(ctx, jwt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewIntrospectedCommand", reflect.TypeOf((*MockCommandFactory)(nil).NewIntrospectedCommand), ctx, jwt)
}

// NewSignInCommand mocks base method.
func (m *MockCommandFactory) NewSignInCommand(ctx context.Context, userName, password string) (entities.Command, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewSignInCommand", ctx, userName, password)
	ret0, _ := ret[0].(entities.Command)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewSignInCommand indicates an expected call of NewSignInCommand.
func (mr *MockCommandFactoryMockRecorder) NewSignInCommand(ctx, userName, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewSignInCommand", reflect.TypeOf((*MockCommandFactory)(nil).NewSignInCommand), ctx, userName, password)
}
